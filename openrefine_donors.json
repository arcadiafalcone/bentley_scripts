[
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column MiddleName using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "MiddleName",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column FirstName using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "FirstName",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column LastName using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "LastName",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Title using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "Title",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DonorNumberID using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DonorNumberID",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Suffix using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "Suffix",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column OrganizationOrUnit using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "OrganizationOrUnit",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Address using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "Address",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Address2 using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "Address2",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column City using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "City",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column State using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "State",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Country using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "Country",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column ZipCode using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "ZipCode",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column ZipRegion using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "ZipRegion",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CareOf using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "CareOf",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PhoneNumber using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "PhoneNumber",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column EmailAddress using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "EmailAddress",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column EmailAddress using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "EmailAddress",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Note using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "Note",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Affiliation using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "Affiliation",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DonorNumber using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DonorNumber",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DonorPart using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DonorPart",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DD_LID using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DD_LID",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DD_Match_Type using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DD_Match_Type",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DD_Sequence using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DD_Sequence",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DD_LastName using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DD_LastName",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DD_FirstName using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DD_FirstName",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DD_MiddletName using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DD_MiddletName",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column DD_Type using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "DD_Type",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column FolderStatus using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "FolderStatus",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Status using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "Status",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column LastUpdate using expression value.trim()",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "columnName": "LastUpdate",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column RestName at index 5 based on column MiddleName using expression grel:if(value != null, cells['FirstName'].value + ' ' + value, cells['FirstName'].value)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "RestName",
    "columnInsertIndex": 5,
    "baseColumnName": "MiddleName",
    "expression": "grel:if(value != null, cells['FirstName'].value + ' ' + value, cells['FirstName'].value)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column FirstName",
    "columnName": "FirstName"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column MiddleName",
    "columnName": "MiddleName"
  },
  {
    "op": "core/column-addition",
    "description": "Create column PostCode at index 13 based on column ZipRegion using expression grel:if(value!=null, cells['ZipCode'].value + ' ' + value, cells['ZipCode'].value)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "PostCode",
    "columnInsertIndex": 13,
    "baseColumnName": "ZipRegion",
    "expression": "grel:if(value!=null, cells['ZipCode'].value + ' ' + value, cells['ZipCode'].value)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column ZipCode",
    "columnName": "ZipCode"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column ZipRegion",
    "columnName": "ZipRegion"
  },
  {
    "op": "core/column-addition",
    "description": "Create column DD_RestName at index 25 based on column DD_MiddletName using expression grel:if(value != null, cells['DD_FirstName'].value + ' ' + value,cells['DD_FirstName'].value)",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "DD_RestName",
    "columnInsertIndex": 25,
    "baseColumnName": "DD_MiddletName",
    "expression": "grel:if(value != null, cells['DD_FirstName'].value + ' ' + value,cells['DD_FirstName'].value)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column DD_FirstName",
    "columnName": "DD_FirstName"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column DD_MiddletName",
    "columnName": "DD_MiddletName"
  }
]
